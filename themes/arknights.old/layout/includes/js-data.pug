if searchConfig !== null
  script(src="/js/search.js")
if theme.waline && theme.waline.enable === true
  script(type='module').
    import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs';
    window.waline = init;

script.pjax-js reset=_=>{
  if theme.valine && theme.valine.enable === true
    |new Valine({
    |  el: '#valine'
    |  , appId: '#{theme.valine.app_id}'
    |  , appKey: '#{theme.valine.app_key}'
    if theme.valine.server_url
      | , serverURLs: '#{theme.valine.server_url}'
    |  , placeholder: '#{__('valine.placeHolder')}'
    |  , path: !{'window.location.pathname'}
    |});
  if theme.gitalk && theme.gitalk.enable === true
    - let config = theme.gitalk, gitAdmin = ''
    for str in theme.gitalk.admin
      - gitAdmin= gitAdmin + "'" + str + "'"
    |gitalk = new Gitalk({
    |  clientID: '#{config.client_id}',
    |  clientSecret: '#{config.client_secret}',
    |  repo: '#{config.repo}',
    |  owner: '#{config.owner}',
    |  admin: [#{gitAdmin}],
    |  distractionFreeMode: #{config.distraction_free_mode || false},
    |  id: #{config.id}
    |});
    |if (document.querySelector("#gitalk")) gitalk.render("gitalk");
  if theme.waline && theme.waline.enable === true
    |if (document.querySelector('#waline'))
    |  waline({
    |    el: '#waline',
    |    dark: ':root[theme-mode="dark"]',
    |    serverURL: '#{theme.waline.server_url}',
    |    path: !{'window.location.pathname'},
    |    emoji: ['https://unpkg.com/@waline/emojis@1.1.0/tieba'],
    |    pageview: true,
    |    comments: true,
    |    locale: {
    |      level0: '学员',
    |      level1: '见习',
    |      level2: '正统',
    |      level3: '导师',
    |      level4: '王国',
    |      level5: '奇迹',
    |      level6: '勇士',
    |      placeholder: 'By the power of language.',
    |      sofa: '空空如也'},
    |  });
  | code.findCode();}

if theme.scripts && theme.scripts.length > 0
  //- scripts list from config.yml
  each url in theme.scripts
    script(src=url)

script(src=config.root + "js/arknights.js")

if pjax
  script(src=config.root + "js/pjax.js")
script window.addEventListener("load",() => {
  if pjax
    |pjax = new Pjax({
    |  cacheBust: false,
    |  selectors: ['title','article','#aside-block','.pjax-js'],
    |  switches: {'article': Pjax.switches.sideBySide},
    |  switchesOptions: {
    |    'article': {
    |      classNames: {
    |        remove: "pjax-out",
    |        add: "pjax-in"
    |      }
    |    }
    |  }
    |});
    |document.addEventListener("pjax:complete", reset);
  | reset()})
